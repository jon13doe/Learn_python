l = list(map(int, input().split()))
s = 0
for i in range(len(l)):
    if l[i] % 2 != 0:
         s += l[i]
print(s)

s = list(input().split())
for i in range(len(s)):
    s[i] = len(s[i])
print(*s)

n = int(input())
for i in range(1, n + 1):
    if n % i == 0:
        print(i)

# Вводится натуральное число n. С помощью цикла for определить,
# является ли оно простым (то есть, делится нацело только на само себя и на 1).
# Вывести на экран ДА, если n простое и НЕТ - в противном случае.
n = int(input())
for i in range(2, n):
    if n % i == 0:
        print("НЕТ")
        break
else:
    print("ДА")
# Вводится список названий городов в одну строчку через пробел.
# Перебрать все эти названия с помощью цикла for и определить,
# начинается ли название следующего города на последнюю
# букву предыдущего города в списке. Если последними встречаются буквы
#'ь', 'ъ', 'ы', то берется следующая с конца буква.
# Вывести на экран ДА, если последовательность удовлетворяет этому
# правилу и НЕТ - в противном случае.
    c = list(input().split())
    for i in range(len(c) - 1):
        c[i] = c[i].rstrip("ыьъ")
        if c[i][-1] != c[i + 1][0].lower():
            print("НЕТ")
            break
    else:
        print("ДА")

# Вводится натуральное число n. Вычислить сумму всех натуральных чисел меньше n, которые кратны или 3 или 5. Результат (сумму) вывести на экран. Пример: n = 10, имеем числа: 3, 5, 6, 9. Их сумма равна 23.
n = int(input())
s = 0
for i in range(1, n):
    if i % 3 == 0 or i % 5 == 0:
        s += i
print(s)
#  Вводится строка. Необходимо найти все индексы фрагмента "ра" во введенной строке. Вывести в строку через пробелы найденные индексы. Если этот фрагмент ни разу не будет найден, то вывести значение -1.

s = str(input())
n = []
if s.count('ра') == 0:
    print('-1')
else:
    for i in range(len(s) - 1):
        if s[i] == 'р' and s[i + 1] == 'а':
            n += [i]
    print(*n)

#Вводится строка с номером телефона. Ожидается формат ввода:
# +7(xxx)xxx-xx-xx где x - это цифра. Размер введенных символов
# считается верным (то есть, не может быть, чтобы отсутствовала
# какая-либо цифра или была лишняя). Необходимо проверить, что
# введенная строка соответствует этому формату. Вывести ДА, если
# соответствует и НЕТ - в противном случае.

#1
n = str(input())
s = '+7(XXX)XXX-XX-XX'
ss = []
sx = []
for i in range(len(s)):
    if s[i] != 'X':
        ss += [i]
    else:
        sx += [i]
if len(n) != len(s):
    print('НЕТ')
else:
    for i, pin in enumerate(sx):
        if n[pin].isdigit() != True:
            print("НЕТ")
            break
        for i, pis in enumerate(ss):
            if n[pis] != s[pis]:
                print('НЕТ')
                break
    else:
        print('ДА')
