# Вводится натуральное число N (то есть, положительное, целое).
# Требуется создать двумерный (вложенный) список размером
# N x N элементов, состоящий из всех единиц, а затем,
# в последний столбец записать пятерки. Вывести этот
# список на экран в виде таблицы чисел, как показано
# в примере ниже.

n = int(input())
N = []
for i in range(n):
    N.append([1] * n)
for i in range(n):
    N[i][-1] = 5
for i in range(n):
    print(*N[i], sep=" ")

# Вводится список из URL-адресов (каждый с новой строки).
# Требуется в них заменить все пробелы на символ дефиса (-).
# Следует учесть, что может быть несколько подряд идущих пробелов.
# Результат преобразования вывести на экран в виде строк из URL-адресов.
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

l = list(map(str, input("\n"))) + list(map(str, input().split("\n"))) + list(map(str, input().split("\n")))
for i, line in enumerate(l):
    while line.count('  '):
        line = line.replace('  ', ' ')
    l[i] = line
    while line.count(' '):
        line = line.replace(' ', '-')
    l[i] = line
for i in range(len(l)):
    print(l[i])

# Вводится натуральное число n. Необходимо найти все простые
# числа, которые меньше этого числа n, то есть, в диапазоне [2; n).
# Результат вывести на экран в строчку через пробел.

n = int(input())
for i in range(2, n):
    for j in range(2, i):
        if i % j == 0:
            break
    else:
        print(i, end=" ")

# Вводится двумерный список размерностью 5 х 5 элементов,
# состоящий из нулей и, в некоторых позициях, единиц
# (см. пример ввода ниже). Требуется проверить, не касаются
# ли единицы друг друга по горизонтали, вертикали и диагонали.
# То есть, вокруг каждой единицы должны быть нули.
# Если проверка проходит вывести ДА, иначе - НЕТ.

import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)
fl = True
for i in range(len(lst_in) - 1):
    for j in range(len(lst_in[i]) - 1):
        if lst_in[i][j] + lst_in[i][j + 1] + lst_in[i + 1][j] + lst_in[i + 1][j + 1] < 2:
            continue
        else:
            fl = False
print('ДА' if fl == True else 'НЕТ')

# Вводится двумерный список размерностью 5 х 5 элементов, состоящий
# из целых чисел (пример ввода см. ниже). Проверьте, является ли этот
# двумерный список симметричным относительно главной диагонали.
# Главная диагональ — та, которая идёт из левого верхнего угла
# двумерного массива в правый нижний. Выведите на экран ДА,
# если матрица симметрична и НЕТ - в противном случае.

import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)
fl = True
for i in range(len(lst_in)):
    for j in range(len(lst_in[i])):
        if lst_in[i][j] == lst_in[j][i]:
            continue
        else:
            fl = False
            break
print(["НЕТ","ДА"][fl])

# Вводится список целых чисел в одну строку через пробел.
# Необходимо выполнить его сортировку выбором по возрастанию (неубыванию)

l = list(map(int, input().split()))
for i in range(len(l) - 1):
    n = i
    for j in range(i, len(l)):
        if l[j] < l[n]:
            n = j
    l[i], l[n] = l[n], l[i]
print(*l)

# Вводится список целых чисел в одну строку через пробел.
# Необходимо выполнить его сортировку по возрастанию
# (неубыванию) методом всплывающего пузырька/

l = list(map(int, input().split()))
for i in range(len(l)-1):
    for j in range(len(l) - i - 1):
        if l[j] > l[j + 1]:
            l[j], l[j + 1] = l[j + 1], l[j]
print(*l)

# В некоторой стране используются денежные купюры достоинством
# в 1, 2, 4, 8, 16, 32 и 64. Вводится натуральное число n.
# Как наименьшим количеством таких денежных купюр можно
# выплатить сумму n? Вывести на экран список купюр для формирования
# суммы n (в одну строчку через пробел, начиная с наибольшей и
# заканчивая наименьшей). Предполагается, что имеется достаточно
# большое количество купюр всех достоинств.

n = int(input())
m =[64, 32, 16, 8, 4, 2, 1]
for i, j in enumerate(m):
    k = n // m[i]
    if k != 0:
        n = n - k * m[i]
        a = [m[i]] * k
        print(*a, end=" ")

# Треугольник паскаля

n = int(input())
p = []
for i in range(n):
    r = [1] * (i + 1)
    for j in range(i + 1):
        if j != 0 and j != i:
            r[j] = p[i - 1][j - 1] + p[i - 1][j]
    p.append(r)
for t in p:
    print(t)
    

