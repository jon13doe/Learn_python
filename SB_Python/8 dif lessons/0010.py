# Вводятся данные в формате ключ=значение в одну строчку через
# пробел. Значениями здесь являются целые числа (см. пример ниже).
# Необходимо на их основе создать словарь d с помощью функции dict()

lst = list(map(str, input().split()))
for i in range(len(lst)):
    lst[i] = lst[i].split('=')
    for j in range(len(lst[i])):
        lst[i][-1] = int(lst[i][-1])
print(dict(lst))

# На вход программы поступают данные в виде набора строк в формате:
# # ключ1=значение1
# ключ2=значение2
# ...
# ключN=значениеN
# # Ключами здесь выступают целые числа (см. пример ниже).
# Необходимо их преобразовать в словарь d (без использования
# функции dict())

lst_in = ['5=отлично', '4=хорошо', '3=удовлетворительно']
lst = [i.split('=') for i in lst_in][::-1]
dic = {int(i): j for i, j in lst}
print(dic)

#  Вводятся данные в формате ключ=значение в одну строчку
#  через пробел. Необходимо на их основе создать словарь
#  d, затем удалить из этого словаря ключи 'False' и '3',
#  если они существуют. Ключами и значениями словаря являются строки.

dic = dict(i.split('=') for i in input().split())
if 'False' in dic:
    del dic['False']
if '3' in dic:
    del dic['3']
print(*sorted(dic.items()))

# Вводятся данные в формате ключ=значение в одну
# строчку через пробел. Необходимо на их основе
# создать словарь, затем проверить, существуют
# ли в нем ключи со значениями: 'house', 'True'
# и '5' (все ключи - строки). Если все они существуют,
# то вывести на экран ДА, иначе - НЕТ.


lst = input().split()
dic = dict(i.split('=') for i in lst)
if ('house' in dic) and ('True' in dic) and ('5' in dic):
    print('ДА')
else:
    print('НЕТ')

# Вводятся номера телефонов в одну строчку через
# пробел с разными кодами стран: +7, +6, +2, +4 и т.д.
# Необходимо составить словарь d, где ключи - это
# коды +7, +6, +2 и т.п., а значения - список номеров
# (следующих в том же порядке, что и во входной строке)
# с соответствующими кодами.

# Sample Input:
# +71234567890 +71234567854 +61234576890 +52134567890 +21235777890 +21234567110 +71232267890

lst = input().split()
dic = {}
for i in range(len(lst)):
    if lst[i][:2] not in dic:
        dic[lst[i][:2]] = [lst[i]]
    else:
        dic[lst[i][:2]] += [lst[i]]
print(*sorted(dic.items()))

# Вводятся номера телефонов в формате:
# номер_1 имя_1
# номер_2 имя_2
# ...
# номер_N имя_N
# Необходимо создать словарь d, где ключами будут имена,
# а значениями - список номеров телефонов для этого имени.
# Обратите внимание, что одному имени может принадлежать
# несколько разных номеров.

# Sample Input:
# +71234567890 Сергей
# +71234567810 Сергей
# +51234567890 Михаил
# +72134567890 Николай


import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)
dic = {}
for i in lst_in:
    for j in [i.split()]:
        if j[1] not in dic:
            dic[j[1]] = [j[0]]
        else:
            dic[j[1]] += [j[0]]
print(*sorted(dic.items()))

# 2
import sys
lst = list(map(str.strip, sys.stdin.readlines()))
a=list([i.split()[1],i.split()[0]]for i in lst)
d=dict([[i[0],[k[1] for k in a if k[0]==i[0]]]for i in a])
print(*sorted(d.items()))

# 3
import sys
lst_in, d = list(map(str.strip, sys.stdin.readlines())), {}
for x in lst_in:
    value, key = x.split()
    d[key] = (d[key] if key in d else []) + [value]
print(*sorted(d.items()))

# Пользователь вводит в цикле целые положительные числа,
# пока не введет число 0. Для каждого числа вычисляется
# квадратный корень (с точностью до сотых) и значение
# выводится на экран (в столбик). С помощью словаря
# выполните кэширование данных так, чтобы при повторном
# вводе того же самого числа результат не вычислялся,
# а бралось ранее вычисленное значение из словаря.
# При этом на экране должно выводиться:
# значение из кэша: <число>

d ={}
while True:
    n = int(input())
    if n == 0:
        break
    else:
        if n in d:
            print(f'значение из кэша: {d[n]}')
        else:
            d[n] = round(n ** .5, 2)
            print(d[n])


# 2
d = {}
while True:
    n = int(input())
    if n == 0:
        break
    else:
        print(round(n ** 0.5, 2) if n not in d else f'значение из кэша: {d[n]}')
        d[n] = round(n ** 0.5, 2)

# Тестовый веб-сервер возвращает HTML-страницы по URL-адресам (строкам).
# На вход программы поступают различные URL-адреса.
# Если адрес пришел впервые, то на экране отобразить строку (без кавычек):
# "HTML-страница для адреса <URL-адрес>"
# Если адрес приходит повторно, то следует взять строку
# "HTML-страница для адреса <URL-адрес>" из словаря и вывести на экран сообщение (без кавычек):
# "Взято из кэша: HTML-страница для адреса <URL-адрес>"
# Сообщения выводить каждое с новой строки.


l = ['ustanovka-i-zapusk-yazyka', 'ustanovka-i-poryadok-raboty-pycharm',
     'peremennyye-operator-prisvaivaniya-tipy-dannykh',
     'arifmeticheskiye-operatsii', 'ustanovka-i-poryadok-raboty-pycharm']
d = {}
for i in l:
     if i in d:
          print(f'Взято из кэша: {d[i]}')
     else:
          print(f'HTML-страница для адреса {i}')
          d[i] = 'HTML-страница для адреса ' + i