# Вводятся вещественные числа в строку через пробел.
# Необходимо на их основе сформировать список lst с
# помощью list comprehension (генератора списков)
# из модулей введенных чисел (в списке должны храниться
# именно числа, а не строки). Результат вывести на
# экран в виде списка командой:

print([abs(x) for x in list(map(float, input().split()))])

# Вводится семизначное целое положительное число.
# С помощью list comprehension сформировать список
# lst, содержащий цифры этого числа (в списке должны
# быть записаны числа, а не строки).
# Результат вывести на экран список командой:

print([x for x in list(map(int, input().strip()))])

#  Вводится натуральное число N. С помощью list comprehension
#  сформировать двумерный список размером N x N, состоящий из
#  нулей, а по главной диагонали - единицы. (Главная диагональ
#  - это элементы, идущие по диагонали от верхнего левого угла
#  матрицы до ее нижнего правого угла). Результат вывести в
#  виде таблицы чисел как показано в примере ниже.

#1
n = int(input())
l = [[0 for x in range(n)] for y in range(n)]
for i in range(n):
    for j in range(n):
        if i == j:
            l[i][j] = 1
    print(*l[i])

#2
N = int(input())
a = [[1 if i == j else 0 for i in range(N)] for j in range(N)]
[print(*b) for b in a]

# Вводятся названия городов в строку через пробел.
# Необходимо сформировать список с помощью list comprehension,
# содержащий названия длиной более пяти символов.
# Результат вывести в строчку через пробел.

N = list(map(str, input().split()))
l = [x for x in N if len(x) > 5]
print(*l)

# Вводится натуральное число n. Необходимо сформировать список
# с помощью list comprehension, состоящий из делителей числа
# n (включая и само число n). Результат вывести на экран
# в одну строку через пробел.

N = int(input())
l = [x for x in range(1, N + 1) if N % x == 0]
print(*l)

# Вводится натуральное число N. Необходимо сгенерировать
# вложенный список с помощью list comprehension, размером
# N x N, где первая строка содержала бы все нули, вторая -
# все единицы, третья - все двойки и так до N-й строки.
# Результат вывести в виде таблицы чисел как показано в примере ниже.

N = int(input())
a = [[j for i in range(N)] for j in range(N)]
[print(*b) for b in a]

# Вводится список вещественных чисел. С помощью list comprehension
# сформировать список, состоящий из элементов введенного списка,
# имеющих четные индексы (то есть, выбрать все элементы с четными индексами).
# Результат вывести на экран в одну строку через пробел.

N = list(map(float, input().split()))
l = [x for x in N if N.index(x) % 2 == 0]
print(*l)

# или

print(*input().split()[::2])

# Вводятся два списка целых чисел одинаковой
# длины каждый с новой строки. С помощью list
# comprehension сформировать третий список,
# состоящий из суммы соответствующих пар чисел
# введенных списков. Результат вывести на экран
# в одну строку через пробел.

N = list(map(int, input().split()))
M = list(map(int, input().split()))
l = [N[i] + M[i] for i in range(len(N))]
print(*l)

# Вводится список в формате:
# <город 1> <численность населения 1> <город 2> <численность населения 2> ... <город N> <численность населения N>
# Необходимо с помощью list comprehension сформировать список lst, содержащий вложенные списки из пар:
# <город> <численность населения>
# Численность населения - целое число в тыс. человек. Вывести результат на экран в виде списка командой:

a = list(map(str, input().split()))
l = [[a[i], int(a[i + 1])] for i in range(0, len(a), 2)]
print(*l)